a=33
b=29
a<<3 --> given number(33) * 2 pow(3)
a<<2 --> given number(33) * 2 pow(2)

b>>2 --> given number(33) / 2 pow(2)
b>>3 --> given number(33) / 2 pow(3)

a=8 b=9
a-->1000
b-->1001
a&b -->1000
a|b-->1001
^a-->0001
~a-->-9(-(a+1))
manual left a<<1 1000
add 1 0 at end    1 0000(binary only 4 bits per line)
then full line    0001 0000

manula right shift b>>1 1001
add 1 0 at first   0100 1reove the one at end deleted
                    0100--> now convert number 2 power 2 is 4

manula right shift b>>2 1001
add 2 0 at first   0010 0 1reove the one at end deleted
                    0010--> now convert number 2 power 1 is 2


BIT MANUPILATION:
2 4 3 2 4
for i in list 
    r=r^i

    i=0,r=0^2     i=1,r=4  i=2,r=3  i=3,r=2     i=4,r=4
    0^2             2^4     6^3         5^2         7^4
    000             010     110         101         111
    010             100     011         010         100

    -----           ----    ----        ----        ----
    010             110     101         111         011   -------  (2) 
r=   2              6       5            7           3

se1.py
explanation:
n=12,c=0            n=6,c=0           n=3,c=0          n=1,c=0
while 12:           while 6:            while 3:       while 12:   
    c=0+(12&1)          c=0+(6&1)          c=0+(3&1)       c=1+(1&1)   
    c=0                 c=0                 c=1            c=2   
    n>>1=6              n>>1=3              n>>1=1         n>>1=0   
